package com.mindtree.app.entity;



import java.io.Serializable;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * EventRegistration generated by hbm2java
 */
@Entity
@Table(name = "EVENT_REGISTRATION", uniqueConstraints = @UniqueConstraint(columnNames = {"EVENT_ID", "EMPLOYEE_ID"}))
public class EventRegistration implements java.io.Serializable {

    /**
     * serialVersionUID.
     */
    private static final long serialVersionUID = 499279726617369768L;
    
    private Long eventRegistrationId;
    private Event events;
    private Employee employees;
    private Long employeeId;
    private Long eventId;
    private Long versionNumber;
    private Serializable lastModifiedDate;
    private String lastModifiedBy;

    public EventRegistration() {
    }

    public EventRegistration(Event events, Employee employees, Long employeeId) {
        this.events = events;
        this.employees = employees;
        this.employeeId = employeeId;
    }

    public EventRegistration(Event events, Employee employees, Long employeeId, Long versionNumber,
        Serializable lastModifiedDate, String lastModifiedBy) {
        this.events = events;
        this.employees = employees;
        this.employeeId = employeeId;
        this.versionNumber = versionNumber;
        this.lastModifiedDate = lastModifiedDate;
        this.lastModifiedBy = lastModifiedBy;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "EVENT_REGISTRATION_ID", unique = true, nullable = false, precision = 22, scale = 0)
    public Long getEventRegistrationId() {
        return this.eventRegistrationId;
    }

    public void setEventRegistrationId(Long eventRegistrationId) {
        this.eventRegistrationId = eventRegistrationId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EVENT_ID", nullable = false, updatable = false, insertable = false)
    public Event getEvents() {
        return this.events;
    }

    public void setEvents(Event events) {
        this.events = events;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EMPLOYEE_ID", nullable = false, updatable = false, insertable = false)
    public Employee getEmployees() {
        return this.employees;
    }

    public void setEmployees(Employee employees) {
        this.employees = employees;
    }

    @Column(name = "EMPLOYEE_ID", nullable = false, precision = 22, scale = 0)
    public Long getEmployeeId() {
        return this.employeeId;
    }

    public void setEmployeeId(Long employeeId) {
        this.employeeId = employeeId;
    }
    
    
    @Column(name = "EVENT_ID", nullable = false, precision = 22, scale = 0)
    public Long getEventId() {
        return eventId;
    }

    public void setEventId(Long eventId) {
        this.eventId = eventId;
    }

    @Column(name = "VERSION_NUMBER", precision = 22, scale = 0)
    public Long getVersionNumber() {
        return this.versionNumber;
    }

    public void setVersionNumber(Long versionNumber) {
        this.versionNumber = versionNumber;
    }

    @Column(name = "LAST_MODIFIED_DATE")
    public Serializable getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    public void setLastModifiedDate(Serializable lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    @Column(name = "LAST_MODIFIED_BY")
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

}
